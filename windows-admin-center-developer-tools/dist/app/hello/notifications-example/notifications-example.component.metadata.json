[{"__symbolic":"module","version":3,"metadata":{"NotificationsExampleComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"sme-notifications-example","template":"\n      <!-- <script src=\"https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js\"></script> -->\n      <sme-tool-header>Notification Examples</sme-tool-header>\n      <div class=\"overflow-margins table-indent\">\n          This component provides a short overview / example on how to utilize the alert and notification features provided by the\n          Honolulu project, and shell. At this point in time, there are 3 examples, 2 popups and one tray notification. <br/>    Popup notifications fall in 2 forms: Notification and Alert. Notifications are grey in color, and disappear after ~10\n          seconds, while Alerts are red, and do not automatically dismiss (requires user acknowledgement).\n      </div>\n      <div>\n          <sme-action-bar class=\"fixed-flex-size tool-bar first-row\">\n              <sme-action-button #action [text]=\"'Send Alert'\" [iconClass]=\"'sme-icon icon-win-upload'\" (execute)=\"sendAlert($event)\"></sme-action-button>\n              <sme-action-button #action [text]=\"'Send Popup Notification'\" [iconClass]=\"'sme-icon icon-win-download'\" (execute)=\"sendNotification($event)\"></sme-action-button>\n              <sme-action-button #action [text]=\"'Send Long Running Notification'\" [iconClass]=\"'sme-icon icon-win-powerButton'\" (execute)=\"initiateLongRunningNotifiaction($event)\"></sme-action-button>\n          </sme-action-bar>\n      </div>\n      <div>\n          <div *ngIf=\"codeDisplay === 'alert'\">\n              <pre class=\"prettyprint\">\n                  <code>\n                          //  Alerts show up as red message boxes on the right hand side of the screen.\n                          //  These messages will stay open until the page is refreshed (full browser)\n                          //  or the user dismesses them.\n                          //  There is currently no way to modify the icon on the alert.\n                          const nodeName = this.appContextService.activeConnection.nodeName;\n                          ++this.alertCount;\n                          this.appContextService.notification.alert(\n                              nodeName,\n                              NotificationState.Error,\n                              'This demo error has been shown: ' + this.alertCount + ' time(s).',\n                              'DEMO ERROR');\n                  </code>\n              </pre>\n          </div>\n          <div *ngIf=\"codeDisplay === 'notify'\">\n              <pre class=\"prettyprint\">\n                  <code>\n                      //  Notifications show up as a grey message box on the right hand side of the screen.\n                      //  These messages will automatically close after ~10 seconds.\n                      //  There is currently no way to modify the icon on the notification.\n                      const nodeName = this.appContextService.activeConnection.nodeName;  // move to service\n                      ++this.notificationCount;\n                      this.appContextService.notification.alert(\n                          nodeName,\n                          NotificationState.Informational,\n                          'This demo notification has been shown: ' + this.notificationCount + ' time(s).',\n                          'DEMO NOTIFICATION');\n                  </code>\n              </pre>\n          </div>\n          <div *ngIf=\"codeDisplay === 'longrunning'\">\n                  <pre class=\"prettyprint\">\n                      <code ng-non-bindable>\n                          /*\n                          *  The AppContextService work item class is used to initiate the UX notification tray experience,\n                          *  the most common usage is for long running tasks that user notification and progress are required.\n                          *  This event will show up in the Action Pane, under the bell button on Honolulu.\n                          */\n                          return this.appContextService.workItem.submitAndWait(\n                              this.appContextService.activeConnection.nodeName,\n                              &lt;WorkItemSubmitRequest&gt;{{ '{' }}\n                                  title: 'Executing a long running work item.',\n                                  description: 'Test long running powershell script with notification.',\n                                  powerShellScript: PowerShellScripts.Get_WinRmState,\n                                  startedMessage: 'Starting %7B%7BobjectName%7D...',\n                                  successMessage: 'Successfully completed: %7B%7BobjectName%7D%7D - %7B%7Bname%7D%7D.',\n                                  errorMessage: 'Failed: %7B%7Bmessage%7D%7D',\n                                  progressMessage: 'In progress: %7B%7Bpercent%7D%7D%',\n                                  objectName: 'My hello object'\n                                  {{ '}' }});\n                      </code>\n                  </pre>\n              </div>\n      </div>\n    ","styles":["\n\n    "]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@msft-sme/shell/angular","name":"AppContextService"},{"__symbolic":"reference","module":"../hello.service","name":"HelloService"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"sendAlert":[{"__symbolic":"method"}],"sendNotification":[{"__symbolic":"method"}],"initiateLongRunningNotifiaction":[{"__symbolic":"method"}],"setupNotification":[{"__symbolic":"method"}]},"statics":{"navigationTitle":{"__symbolic":"function","parameters":["appContextService","snapshot"],"value":{"__symbolic":"select","expression":{"__symbolic":"select","expression":{"__symbolic":"select","expression":{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"MsftSme"},"member":"resourcesStrings"}},"member":"HelloWorld"},"member":"notifications"},"member":"title"}}}}}},{"__symbolic":"module","version":1,"metadata":{"NotificationsExampleComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"sme-notifications-example","template":"\n      <!-- <script src=\"https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js\"></script> -->\n      <sme-tool-header>Notification Examples</sme-tool-header>\n      <div class=\"overflow-margins table-indent\">\n          This component provides a short overview / example on how to utilize the alert and notification features provided by the\n          Honolulu project, and shell. At this point in time, there are 3 examples, 2 popups and one tray notification. <br/>    Popup notifications fall in 2 forms: Notification and Alert. Notifications are grey in color, and disappear after ~10\n          seconds, while Alerts are red, and do not automatically dismiss (requires user acknowledgement).\n      </div>\n      <div>\n          <sme-action-bar class=\"fixed-flex-size tool-bar first-row\">\n              <sme-action-button #action [text]=\"'Send Alert'\" [iconClass]=\"'sme-icon icon-win-upload'\" (execute)=\"sendAlert($event)\"></sme-action-button>\n              <sme-action-button #action [text]=\"'Send Popup Notification'\" [iconClass]=\"'sme-icon icon-win-download'\" (execute)=\"sendNotification($event)\"></sme-action-button>\n              <sme-action-button #action [text]=\"'Send Long Running Notification'\" [iconClass]=\"'sme-icon icon-win-powerButton'\" (execute)=\"initiateLongRunningNotifiaction($event)\"></sme-action-button>\n          </sme-action-bar>\n      </div>\n      <div>\n          <div *ngIf=\"codeDisplay === 'alert'\">\n              <pre class=\"prettyprint\">\n                  <code>\n                          //  Alerts show up as red message boxes on the right hand side of the screen.\n                          //  These messages will stay open until the page is refreshed (full browser)\n                          //  or the user dismesses them.\n                          //  There is currently no way to modify the icon on the alert.\n                          const nodeName = this.appContextService.activeConnection.nodeName;\n                          ++this.alertCount;\n                          this.appContextService.notification.alert(\n                              nodeName,\n                              NotificationState.Error,\n                              'This demo error has been shown: ' + this.alertCount + ' time(s).',\n                              'DEMO ERROR');\n                  </code>\n              </pre>\n          </div>\n          <div *ngIf=\"codeDisplay === 'notify'\">\n              <pre class=\"prettyprint\">\n                  <code>\n                      //  Notifications show up as a grey message box on the right hand side of the screen.\n                      //  These messages will automatically close after ~10 seconds.\n                      //  There is currently no way to modify the icon on the notification.\n                      const nodeName = this.appContextService.activeConnection.nodeName;  // move to service\n                      ++this.notificationCount;\n                      this.appContextService.notification.alert(\n                          nodeName,\n                          NotificationState.Informational,\n                          'This demo notification has been shown: ' + this.notificationCount + ' time(s).',\n                          'DEMO NOTIFICATION');\n                  </code>\n              </pre>\n          </div>\n          <div *ngIf=\"codeDisplay === 'longrunning'\">\n                  <pre class=\"prettyprint\">\n                      <code ng-non-bindable>\n                          /*\n                          *  The AppContextService work item class is used to initiate the UX notification tray experience,\n                          *  the most common usage is for long running tasks that user notification and progress are required.\n                          *  This event will show up in the Action Pane, under the bell button on Honolulu.\n                          */\n                          return this.appContextService.workItem.submitAndWait(\n                              this.appContextService.activeConnection.nodeName,\n                              &lt;WorkItemSubmitRequest&gt;{{ '{' }}\n                                  title: 'Executing a long running work item.',\n                                  description: 'Test long running powershell script with notification.',\n                                  powerShellScript: PowerShellScripts.Get_WinRmState,\n                                  startedMessage: 'Starting %7B%7BobjectName%7D...',\n                                  successMessage: 'Successfully completed: %7B%7BobjectName%7D%7D - %7B%7Bname%7D%7D.',\n                                  errorMessage: 'Failed: %7B%7Bmessage%7D%7D',\n                                  progressMessage: 'In progress: %7B%7Bpercent%7D%7D%',\n                                  objectName: 'My hello object'\n                                  {{ '}' }});\n                      </code>\n                  </pre>\n              </div>\n      </div>\n    ","styles":["\n\n    "]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@msft-sme/shell/angular","name":"AppContextService"},{"__symbolic":"reference","module":"../hello.service","name":"HelloService"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"sendAlert":[{"__symbolic":"method"}],"sendNotification":[{"__symbolic":"method"}],"initiateLongRunningNotifiaction":[{"__symbolic":"method"}],"setupNotification":[{"__symbolic":"method"}]},"statics":{"navigationTitle":{"__symbolic":"function","parameters":["appContextService","snapshot"],"value":{"__symbolic":"select","expression":{"__symbolic":"select","expression":{"__symbolic":"select","expression":{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"MsftSme"},"member":"resourcesStrings"}},"member":"HelloWorld"},"member":"notifications"},"member":"title"}}}}}}]