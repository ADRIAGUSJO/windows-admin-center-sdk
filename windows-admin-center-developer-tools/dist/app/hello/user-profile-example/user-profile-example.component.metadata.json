[{"__symbolic":"module","version":3,"metadata":{"HelloExtensionSettings":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@msft-sme/shell/core","name":"VersionedObject"},"members":{"upgrade":[{"__symbolic":"method"}]},"statics":{"propertyNames":{"booleanExample":"booleanExample"}}},"UserProfileExampleComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"sme-user-profile-example","template":"\n      <div class=\"sme-documentation sme-margin-inset-sm\">\n          <h2>User Profile</h2>\n          <p>\n              This component provides a short overview / example on how to save and retrieve user specific settings for your extension. The values of the form below were restored from user settings for this extension.\n          </p>\n          <h3>Versioned Object</h3>\n          <p>\n              Versioning your data store is a very important part of maintaining forward/backward compatibility. For the reason using the the UserProfileService requires you to extend the VersionedObject class for saving and retrieving your data Here is an example\n              of this in code:\n          </p>\n          <code>\n      /**\n       * The Versioned representation of the Hello Extension Settings\n       */\n      export class HelloExtensionSettings extends VersionedObject {{'{'}}\n    \n          /**\n           * Getter for the latest version of the user profile. \n           */\n          public get latestVersion(): number{{'{'}}\n              return 0;\n          }\n\n          /**\n           * Getter for the example property.\n           * You must use 'getProperty' to get values from the internal object properties store\n           */\n          public get booleanExample(): boolean {{'{'}}\n              return &lt;boolean&gt;this.getProperty('booleanExample')\n          }\n\n          /**\n           * Setter for the example property.\n           * You must use 'setProperty' to set values from the internal object properties store\n           */\n          public set booleanExample(value: boolean) {{'{'}}\n              this.setProperty('booleanExample', value);\n          }\n\n          /**\n           * upgrades the current properties to the latest version\n           * if this.currentVersion is null or undefined, then the upgrade should initialize to the latest version\n           */\n          protected upgrade() {{'{'}}\n              // For now, we dont need to do anything but initialize to the latest version.\n              // NOTE: When latestVersion is updated, then we need to add logic here to upgrade old settings objects\n              if (MsftSme.isNullOrUndefined(this.currentVersion)) {{'{'}}\n                  this.clear();\n                  this.booleanExample = false;\n                  this.currentVersion = this.latestVersion;\n                  return;\n              }\n          }\n      }\n          </code>\n          <h3>Example</h3>\n          <div class=\"sme-documentation-example sme-layout-relative sme-position-stretch-h\">\n              <sme-loading-wheel *ngIf=\"!settings && !settingsFailed\"></sme-loading-wheel>\n              <form *ngIf=\"settings\">\n                  <div class=\"sme-checkbox\">\n                      <label>\n                        <input aria-label=\"Boolean Example\" name=\"example-checkbox\" type=\"checkbox\" [(ngModel)]=\"settings.booleanExample\">\n                        <span aria-hidden=\"true\">Boolean Example</span>\n                      </label>\n                  </div>\n                  <div>\n                      <button type=\"submit\" (click)=\"saveSettings()\">Save Settings</button>\n                  </div>\n              </form>\n          </div>\n          <code>\n            // get my extensions settings \n            appContextService.userProfileManager\n              // get the settings into the type for the versionedObject extension we defined earlier\n              .getExtensionSettings(HelloExtensionSettings)\n              .take(1)\n              .flatMap(\n                settings => {{'{'}}\n                    // change settings              \n                    settings.booleanExample = true;\n                    // save the settings\n                    return settings.save();\n\n                    // alternativly we can save and revert if there is a failure.\n                    return settings.trySaver(() => {{'{'}} settings.booleanExample = true; });\n                });\n        \n          </code>\n      </div>\n    "}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@msft-sme/shell/angular","name":"AppContextService"}]}],"saveSettings":[{"__symbolic":"method"}]},"statics":{"navigationTitle":{"__symbolic":"function","parameters":["appContextService","snapshot"],"value":{"__symbolic":"select","expression":{"__symbolic":"select","expression":{"__symbolic":"select","expression":{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"MsftSme"},"member":"resourcesStrings"}},"member":"HelloWorld"},"member":"dll"},"member":"title"}}}}}},{"__symbolic":"module","version":1,"metadata":{"HelloExtensionSettings":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@msft-sme/shell/core","name":"VersionedObject"},"members":{"upgrade":[{"__symbolic":"method"}]},"statics":{"propertyNames":{"booleanExample":"booleanExample"}}},"UserProfileExampleComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"sme-user-profile-example","template":"\n      <div class=\"sme-documentation sme-margin-inset-sm\">\n          <h2>User Profile</h2>\n          <p>\n              This component provides a short overview / example on how to save and retrieve user specific settings for your extension. The values of the form below were restored from user settings for this extension.\n          </p>\n          <h3>Versioned Object</h3>\n          <p>\n              Versioning your data store is a very important part of maintaining forward/backward compatibility. For the reason using the the UserProfileService requires you to extend the VersionedObject class for saving and retrieving your data Here is an example\n              of this in code:\n          </p>\n          <code>\n      /**\n       * The Versioned representation of the Hello Extension Settings\n       */\n      export class HelloExtensionSettings extends VersionedObject {{'{'}}\n    \n          /**\n           * Getter for the latest version of the user profile. \n           */\n          public get latestVersion(): number{{'{'}}\n              return 0;\n          }\n\n          /**\n           * Getter for the example property.\n           * You must use 'getProperty' to get values from the internal object properties store\n           */\n          public get booleanExample(): boolean {{'{'}}\n              return &lt;boolean&gt;this.getProperty('booleanExample')\n          }\n\n          /**\n           * Setter for the example property.\n           * You must use 'setProperty' to set values from the internal object properties store\n           */\n          public set booleanExample(value: boolean) {{'{'}}\n              this.setProperty('booleanExample', value);\n          }\n\n          /**\n           * upgrades the current properties to the latest version\n           * if this.currentVersion is null or undefined, then the upgrade should initialize to the latest version\n           */\n          protected upgrade() {{'{'}}\n              // For now, we dont need to do anything but initialize to the latest version.\n              // NOTE: When latestVersion is updated, then we need to add logic here to upgrade old settings objects\n              if (MsftSme.isNullOrUndefined(this.currentVersion)) {{'{'}}\n                  this.clear();\n                  this.booleanExample = false;\n                  this.currentVersion = this.latestVersion;\n                  return;\n              }\n          }\n      }\n          </code>\n          <h3>Example</h3>\n          <div class=\"sme-documentation-example sme-layout-relative sme-position-stretch-h\">\n              <sme-loading-wheel *ngIf=\"!settings && !settingsFailed\"></sme-loading-wheel>\n              <form *ngIf=\"settings\">\n                  <div class=\"sme-checkbox\">\n                      <label>\n                        <input aria-label=\"Boolean Example\" name=\"example-checkbox\" type=\"checkbox\" [(ngModel)]=\"settings.booleanExample\">\n                        <span aria-hidden=\"true\">Boolean Example</span>\n                      </label>\n                  </div>\n                  <div>\n                      <button type=\"submit\" (click)=\"saveSettings()\">Save Settings</button>\n                  </div>\n              </form>\n          </div>\n          <code>\n            // get my extensions settings \n            appContextService.userProfileManager\n              // get the settings into the type for the versionedObject extension we defined earlier\n              .getExtensionSettings(HelloExtensionSettings)\n              .take(1)\n              .flatMap(\n                settings => {{'{'}}\n                    // change settings              \n                    settings.booleanExample = true;\n                    // save the settings\n                    return settings.save();\n\n                    // alternativly we can save and revert if there is a failure.\n                    return settings.trySaver(() => {{'{'}} settings.booleanExample = true; });\n                });\n        \n          </code>\n      </div>\n    "}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@msft-sme/shell/angular","name":"AppContextService"}]}],"saveSettings":[{"__symbolic":"method"}]},"statics":{"navigationTitle":{"__symbolic":"function","parameters":["appContextService","snapshot"],"value":{"__symbolic":"select","expression":{"__symbolic":"select","expression":{"__symbolic":"select","expression":{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"MsftSme"},"member":"resourcesStrings"}},"member":"HelloWorld"},"member":"dll"},"member":"title"}}}}}}]