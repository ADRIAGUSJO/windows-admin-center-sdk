{"version":3,"sources":["webpack:///./src/app/solution-example/solution-example.module.ts","webpack:///./src/app/solution-example/solution-example.component.ts","webpack:///./src/app/solution-example/solutionExample.routing.ts","webpack:///./src/app/solution-example/solution-example.component.css","webpack:///./src/app/solution-example/solution-example.component.html","webpack:///./~/css-loader/lib/css-base.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAA+C;AACN;AACI;AAC2B;AACpB;AAUpD,IAAa,qBAAqB;IAAlC;IAAqC,CAAC;IAAD,4BAAC;AAAD,CAAC;AAAzB,qBAAqB;IARjC,8EAAQ,CAAC;QACR,OAAO,EAAE;YACP,6DAAY;YACZ,2DAAW;YACX,yEAAO;SACR;QACD,YAAY,EAAE,CAAC,6FAAwB,CAAC;KACzC,CAAC;GACW,qBAAqB,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;ACdgB;AAOlD,IAAa,wBAAwB;IAEnC;QACE,QAAQ;IACV,CAAC;IAEM,2CAAQ,GAAf;QACE,SAAS;IACX,CAAC;IACH,+BAAC;AAAD,CAAC;AATY,wBAAwB;IALpC,+EAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,mCAAgD;QAChD,mCAA+C;KAChD,CAAC;;GACW,wBAAwB,CASpC;AAToC;;;;;;;;;;;;;;;;;;;ACPI;AACc;AACiB;AAExE,IAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,6FAAwB;KAC1C;CAAC,CAAC;AAUH,IAAa,OAAO;IAApB;IAAuB,CAAC;IAAD,cAAC;AAAD,CAAC;AAAX,OAAO;IARnB,8EAAQ,CAAC;QACN,OAAO,EAAE;YACL,6DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;SAChC;QACD,OAAO,EAAE;YACL,6DAAY;SACf;KACJ,CAAC;GACW,OAAO,CAAI;AAAJ;;;;;;;;AClBpB;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,uF;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gBAAgB;AACnD,IAAI;AACJ;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA;AACA;AACA;AACA,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,oDAAoD,cAAc;;AAElE;AACA","file":"0.chunk.js","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { SolutionExampleComponent } from './solution-example.component';\nimport { Routing } from './solutionExample.routing';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    Routing\n  ],\n  declarations: [SolutionExampleComponent]\n})\nexport class SolutionExampleModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/solution-example/solution-example.module.ts","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'solution-example',\n  templateUrl: './solution-example.component.html',\n  styleUrls: ['./solution-example.component.css']\n})\nexport class SolutionExampleComponent implements OnInit {\n  \n  constructor() {\n    // TODO:\n  }\n\n  public ngOnInit() {\n    // TODO: \n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/solution-example/solution-example.component.ts","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SolutionExampleComponent } from './solution-example.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: SolutionExampleComponent\r\n}];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes)\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\nexport class Routing { }\n\n\n// WEBPACK FOOTER //\n// ./src/app/solution-example/solutionExample.routing.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/solution-example/solution-example.component.css\n// module id = 1008\n// module chunks = 0","module.exports = \"<p>\\n  You've added a connection.  You can do your thing here.\\n</p>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/solution-example/solution-example.component.html\n// module id = 1010\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader/lib/css-base.js\n// module id = 50\n// module chunks = 0 1 2"],"sourceRoot":""}