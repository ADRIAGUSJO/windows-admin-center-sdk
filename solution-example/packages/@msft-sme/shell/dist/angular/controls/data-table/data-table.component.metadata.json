[{"__symbolic":"module","version":3,"metadata":{"DataTableComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"sme-data-table","styles":["\n      :host {\n          width: 100%;\n          display: flex;\n          flex-wrap: nowrap;\n          flex-direction: column;\n          align-content: stretch;\n          align-items: stretch;\n          justify-content: flex-start;\n          position: relative;\n          overflow: hidden;\n      }\n\n      table {\n          width: 100%;\n          table-layout: fixed;\n      }\n\n      th {\n          cursor: pointer;\n          font-weight: normal;\n          color: #686868;\n          font-size: 11px;\n          padding: 0 8px;    \n          height: 27px;\n          -webkit-touch-callout: none; /* iOS Safari */\n          -webkit-user-select: none; /* Safari */\n           -khtml-user-select: none; /* Konqueror HTML */\n             -moz-user-select: none; /* Firefox */\n              -ms-user-select: none; /* Internet Explorer/Edge */\n                  user-select: none; /* Non-prefixed version, currently\n                                        supported by Chrome and Opera */\n      }\n\n      th:hover,\n      .header.has-multiple-selection table thead tr th.first:hover {\n          background: #f8f8f8;    \n      }\n\n      th .sme-icon:before {\n          font-size: 11px;\n      }\n\n      .header table thead tr th.first:hover {\n          background: none;\n          cursor: default;\n      }\n\n      .header table thead tr th.first .datatable-checkbox {\n          display: none;    \n      }\n\n      .header.has-multiple-selection table thead tr th.first .datatable-checkbox {\n          display: block;\n      }\n\n      .header table thead tr th.first,\n      .item td.first,\n      .item.no-data .prefix {\n          width: 26px;\n      }\n\n      .header table thead tr th.first,\n      .item td.first .cell-data {\n          padding: 0;\n      }\n\n      .item td.first .datatable-checkbox {\n          display: none;\n      }\n\n      .content.has-multiple-selection .item.selected td.first .datatable-checkbox,\n      .content.has-multiple-selection .item td.first:hover .datatable-checkbox {\n          display: block;\n      }\n\n      .item.no-data .prefix {\n          float: left;\n      }\n\n      .item.group-header .cell-data:first-of-type .sme-icon:before {    \n          font-size: 10px;\n          line-height: 10px;\n          margin-top: -3px;\n          margin-right: 3px;\n      }\n\n      .item.group-item .first-data-column .cell-data {    \n          padding-left: 26px;\n      }\n\n      .header table thead tr th {\n          padding: 0 8px;\n      }\n\n      .header {\n          flex: 0 0 auto;\n          border-bottom: solid 1px #ddd;\n          background: white;\n          position: absolute;\n          margin-top: -1px;\n          z-index: 1;    \n      }\n\n      .header.is-scrolled {\n          box-shadow: 0px -1px 7px #999;\n      }\n\n      .content {\n          flex: 1 1 auto;\n          position: relative;\n          margin-top: 27px;\n      }\n\n      .content .scroll-data {\n          position: absolute;\n          left: 0;\n          width: 100%;\n          overflow: hidden;\n          border-collapse: collapse;\n      }\n\n      .content .scroll-container {\n          overflow-x: hidden;\n          overflow-y: auto;    \n      }\n\n      .content .scroll-body {\n          position: relative;\n          overflow: hidden;\n      }\n\n      .cell-data {\n          height: 30px;\n          line-height: 30px;\n          border-bottom: solid 1px #eee;  \n          overflow: hidden;    \n      }\n\n      .item.data {\n          cursor: pointer;\n      }\n\n      .item.data:hover {\n          background: #f2fbfe;\n      }\n\n      .item.data.selected {\n          background: #E6F7FE;\n      }\n\n      .item .cell-data {\n          white-space: nowrap;\n          text-overflow: ellipsis;\n          overflow: hidden;\n          padding: 0 8px;\n      }\n\n      :host >>> .scrollbar-measure {\n          width: 100px;\n          height: 100px;\n          overflow: scroll;\n          position: absolute;\n          top: -9999px;\n      }\n\n      .datatable-checkbox {\n          width: 100%;\n          position: relative;\n          height: 30px;\n      }\n      .datatable-checkbox label {\n          width: 12px;\n          height: 12px;\n          cursor: pointer;\n          position: absolute;\n          top: 50%;\n          left: 50%;\n          transform: translate(-50%, -50%);\n          background: white;\n          border: solid 1px #686868;    \n      }\n\n      .datatable-checkbox input[type=checkbox]:hover + label {\n          background: rgb(242,251,254);    \n      }\n\n      .datatable-checkbox input[type=checkbox] {\n          position: absolute;\n          top: 0;\n          left: 0;\n          width: 100%;\n          height: 100%;\n          z-index: 1;\n          margin: 0;\n          opacity: 0;\n          cursor: pointer;\n      }\n      .datatable-checkbox input[type=checkbox]:checked + label {\n          background: none;\n          border: solid 1px transparent;\n      }\n      .datatable-checkbox input[type=checkbox]:checked + label:after {\n          content: '\\E8FB';\n          font-family: Server-MDL2;\n          position: absolute;\n          top: 0;\n          line-height: 12px;\n      }\n      .loading-indicator {\n          display: none;\n          position: absolute;\n          left: 50%;\n          top: 50%;\n          transform: translate(-50%,-50%);\n      }\n      .is-busy .loading-indicator {\n          display: block;\n      }\n    "],"template":"\n      <div class=\"header\" #header [ngClass]=\"{'is-scrolled':isScrolledDown, 'has-multiple-selection':selectionMode==='multiple'}\">\n          <table #headerTable>\n              <thead>\n                  <tr>\n                      <th class=\"first\">\n                          <div class=\"datatable-checkbox\">\n                              <input type=\"checkbox\" [checked]=\"selection && selection.length===filteredItems.length\" (change)=\"onAllItemCheckBoxClicked()\"\n                              />\n                              <label></label>\n                          </div>\n                      </th>\n                      <th *ngFor=\"let column of columns\" (click)=\"clickColumn(column)\" [hidden]=\"column==groupColumn\">\n                          <span class=\"columnName\">{{column.header}}</span>\n                          <span class=\"sortIcon sme-icon\" [ngClass]=\"{'icon-win-up':column.sortMode==sortModeEnum.Ascend,'icon-win-down':column.sortMode==sortModeEnum.Descend}\"></span>\n                      </th>\n                  </tr>\n              </thead>\n          </table>\n      </div>\n      <div class=\"content\" #content [ngClass]=\"{'is-busy':isBusy, 'has-multiple-selection':selectionMode==='multiple'}\">\n          <div class=\"loading-indicator\">\n              <sme-loading-wheel></sme-loading-wheel>\n          </div>\n          <div class=\"scroll-container stretch-absolute\" #scrollContainer>\n              <div class=\"item no-data\" *ngIf=\"renderedItems.length===0 && !lazyLoad\">\n                  <div class=\"prefix cell-data\">&nbsp;</div>\n                  <div class=\"cell-data\">{{getPlaceholderMessage()}}</div>\n              </div>\n              <div class=\"scroll-body\" #scrollBody>\n                  <table class=\"scroll-data\" #scrollAboveData>\n                      <tbody>\n                          <tr *ngFor=\"let renderedItem of renderedItemsAboveViewPort; let rowIndex = index\" class=\"item data\" \n                              [ngClass]=\"{'selected': isItemSelected(renderedItem), 'group-item': renderedItem.type==renderedItemTypeEnum.GroupItem, 'group-header': renderedItem.type==renderedItemTypeEnum.GroupHeader}\">\n                              <td class=\"first\">\n                                  <div class=\"cell-data\">\n                                      <div class=\"datatable-checkbox\">\n                                          <input type=\"checkbox\" [checked]=\"isItemSelected(renderedItem)\" />\n                                          <label></label>\n                                      </div>\n                                  </div>\n                              </td>\n                              <td *ngFor=\"let column of columns; let colIndex=index\" [attr.colspan]=\"(renderedItem.type==renderedItemTypeEnum.GroupHeader && colIndex==0)?(columns.length-1):1\" [hidden]=\"(renderedItem.type==renderedItemTypeEnum.GroupHeader && colIndex>0) || column==groupColumn\"\n                                  [ngClass]=\"{'first-data-column': isFirstDataColumn(column)}\">\n                                  <div *ngIf=\"renderedItem.type==renderedItemTypeEnum.GroupHeader && colIndex==0\" class=\"cell-data\" (click)=\"clickGroupToggle(renderedItem)\">\n                                      <span *ngIf=\"useGroupToggle\" class=\"sme-icon\" [ngClass]=\"{'sme-icon-chevronDown':isGroupExpanded(renderedItem.data), 'sme-icon-chevronRight':!isGroupExpanded(renderedItem.data)}\"></span>\n                                      <span *ngIf=\"!this.groupHeaderTemplate\">\n                                          {{renderedItem.data}}\n                                      </span>\n                                      <span *ngIf=\"this.groupHeaderTemplate\">\n                                          <sme-data-table-template-loader [template]=\"this.groupHeaderTemplate\" [data]=\"renderedItem.data\"></sme-data-table-template-loader>\n                                      </span>\n                                  </div>\n                                  <div *ngIf=\"!column.bodyTemplate && renderedItem.type!=renderedItemTypeEnum.GroupHeader\" class=\"cell-data\">\n                                      {{renderedItem.data?renderedItem.data[column.field]:'.'}}\n                                  </div>\n                                  <div *ngIf=\"renderedItem.type!=renderedItemTypeEnum.GroupHeader && renderedItem.data && column.bodyTemplate\" class=\"cell-data\">\n                                      <sme-data-table-template-loader [template]=\"column.bodyTemplate\" [data]=\"renderedItem.data\" [rowIndex]=\"rowIndex\"></sme-data-table-template-loader>\n                                  </div>\n                              </td>\n                          </tr>\n                      </tbody>\n                  </table>\n                  <table class=\"scroll-data\" #scrollData>\n                      <tbody>\n                          <tr *ngFor=\"let renderedItem of renderedItemsInAndBelowViewPort; let rowIndex = index\" (click)=\"selectItem($event, renderedItem)\" class=\"item data\"\n                              [ngClass]=\"{'selected': isItemSelected(renderedItem), 'group-item': renderedItem.type==renderedItemTypeEnum.GroupItem, 'group-header': renderedItem.type==renderedItemTypeEnum.GroupHeader}\" (dblclick)=\"doubleClickRow(renderedItem)\">\n                              <td class=\"first\" [ngClass]=\"{'checked': isItemSelected(renderedItem)}\">\n                                  <div class=\"cell-data\">\n                                      <div class=\"datatable-checkbox\">\n                                          <input type=\"checkbox\" [checked]=\"isItemSelected(renderedItem)\" (change)=\"onItemCheckBoxClicked(renderedItem)\" />\n                                          <label></label>\n                                      </div>\n                                  </div>\n                              </td>\n                              <td *ngFor=\"let column of columns; let colIndex=index\" [attr.colspan]=\"(renderedItem.type==renderedItemTypeEnum.GroupHeader && colIndex==0)?(columns.length-1):1\" [hidden]=\"(renderedItem.type==renderedItemTypeEnum.GroupHeader && colIndex>0) || (renderedItem.type!=renderedItemTypeEnum.GroupHeader && column==groupColumn)\"\n                                  [ngClass]=\"{'first-data-column': isFirstDataColumn(column)}\">\n                                  <div *ngIf=\"renderedItem.type==renderedItemTypeEnum.GroupHeader && colIndex==0\" class=\"cell-data\" (click)=\"clickGroupToggle(renderedItem)\">\n                                      <span *ngIf=\"useGroupToggle\" class=\"sme-icon\" [ngClass]=\"{'sme-icon-chevronDown':isGroupExpanded(renderedItem.data), 'sme-icon-chevronRight':!isGroupExpanded(renderedItem.data)}\"></span>\n                                      <span *ngIf=\"!this.groupHeaderTemplate\">\n                                          {{renderedItem.data}}\n                                      </span>\n                                      <span *ngIf=\"this.groupHeaderTemplate\">\n                                          <sme-data-table-template-loader [template]=\"this.groupHeaderTemplate\" [data]=\"renderedItem.data\"></sme-data-table-template-loader>\n                                      </span>\n                                  </div>\n                                  <div *ngIf=\"!column.bodyTemplate && renderedItem.type!=renderedItemTypeEnum.GroupHeader\" class=\"cell-data\">\n                                      {{renderedItem.data?renderedItem.data[column.field]:'.'}}\n                                  </div>\n                                  <div *ngIf=\"renderedItem.type!=renderedItemTypeEnum.GroupHeader && renderedItem.data && column.bodyTemplate\" class=\"cell-data\">\n                                      <sme-data-table-template-loader [template]=\"column.bodyTemplate\" [data]=\"renderedItem.data\" [rowIndex]=\"rowIndex\"></sme-data-table-template-loader>\n                                  </div>\n                              </td>\n                          </tr>\n                          <tr class=\"item\" #tempRow>\n                              <td>\n                                  <div class=\"cell-data\">&nbsp;</div>\n                              </td>\n                          </tr>\n                      </tbody>\n                  </table>\n              </div>\n          </div>\n      </div>\n    "}]}],"members":{"headerTableElement":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["headerTable"]}]}],"contentElement":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["content"]}]}],"scrollContainerElement":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["scrollContainer"]}]}],"tempRowElement":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["tempRow"]}]}],"scrollBodyElement":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["scrollBody"]}]}],"scrollAboveDataElement":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["scrollAboveData"]}]}],"scrollDataElement":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["scrollData"]}]}],"groupHeaderTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild"},"arguments":["group"]}]}],"selectionChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"onRowDblclick":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"columns":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChildren"},"arguments":[{"__symbolic":"reference","module":"./data-table.column.component","name":"DataTableColumnComponent"}]}]}],"renderedItemsChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"isBusy":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"loadingMessage":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"noRecordMessage":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"lazyLoadingData":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"lazyLoad":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"globalFilter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"caseSensitiveFilter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"items":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"selection":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"selectionMode":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"defaultSortColumn":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"defaultSortMode":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"onFilter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"doCustomSort":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"onRowSelect":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"onRowUnselect":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"groupColumn":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"groupSortMode":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"useGroupToggle":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"defaultGroupToggleExpanded":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional"}},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject"},"arguments":["layout"]}]],"parameters":[{"__symbolic":"reference","module":"@angular/core","name":"NgZone"},{"__symbolic":"reference","module":"../common/interfaces","name":"Layout"}]}],"refreshData":[{"__symbolic":"method"}],"resetScroll":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"ngAfterViewChecked":[{"__symbolic":"method"}],"selectItem":[{"__symbolic":"method"}],"getPlaceholderMessage":[{"__symbolic":"method"}],"clickGroupToggle":[{"__symbolic":"method"}],"expandAllGroup":[{"__symbolic":"method"}],"collaseAllGroup":[{"__symbolic":"method"}],"isFirstDataColumn":[{"__symbolic":"method"}],"clickColumn":[{"__symbolic":"method"}],"doubleClickRow":[{"__symbolic":"method"}],"scrollSelectedItemIntoView":[{"__symbolic":"method"}],"onItemCheckBoxClicked":[{"__symbolic":"method"}],"onAllItemCheckBoxClicked":[{"__symbolic":"method"}],"isItemSelected":[{"__symbolic":"method"}],"isGroupExpanded":[{"__symbolic":"method"}],"virtualCount":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"initializeUI":[{"__symbolic":"method"}],"sortItems":[{"__symbolic":"method"}],"defaultSortCompareFunction":[{"__symbolic":"method"}],"hasVerticalOverflow":[{"__symbolic":"method"}],"alignScrollBar":[{"__symbolic":"method"}],"calculateScrollbarWidth":[{"__symbolic":"method"}],"calculateItemInViewPort":[{"__symbolic":"method"}],"filter":[{"__symbolic":"method"}],"handleGroup":[{"__symbolic":"method"}],"renderItems":[{"__symbolic":"method"}],"handleScrollAboveDataElement":[{"__symbolic":"method"}],"onLayoutChanged":[{"__symbolic":"method"}],"alignContent":[{"__symbolic":"method"}],"clearSelection":[{"__symbolic":"method"}]},"statics":{"selectionModeMultipleOption":"multiple"}}}},{"__symbolic":"module","version":1,"metadata":{"DataTableComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"sme-data-table","styles":["\n      :host {\n          width: 100%;\n          display: flex;\n          flex-wrap: nowrap;\n          flex-direction: column;\n          align-content: stretch;\n          align-items: stretch;\n          justify-content: flex-start;\n          position: relative;\n          overflow: hidden;\n      }\n\n      table {\n          width: 100%;\n          table-layout: fixed;\n      }\n\n      th {\n          cursor: pointer;\n          font-weight: normal;\n          color: #686868;\n          font-size: 11px;\n          padding: 0 8px;    \n          height: 27px;\n          -webkit-touch-callout: none; /* iOS Safari */\n          -webkit-user-select: none; /* Safari */\n           -khtml-user-select: none; /* Konqueror HTML */\n             -moz-user-select: none; /* Firefox */\n              -ms-user-select: none; /* Internet Explorer/Edge */\n                  user-select: none; /* Non-prefixed version, currently\n                                        supported by Chrome and Opera */\n      }\n\n      th:hover,\n      .header.has-multiple-selection table thead tr th.first:hover {\n          background: #f8f8f8;    \n      }\n\n      th .sme-icon:before {\n          font-size: 11px;\n      }\n\n      .header table thead tr th.first:hover {\n          background: none;\n          cursor: default;\n      }\n\n      .header table thead tr th.first .datatable-checkbox {\n          display: none;    \n      }\n\n      .header.has-multiple-selection table thead tr th.first .datatable-checkbox {\n          display: block;\n      }\n\n      .header table thead tr th.first,\n      .item td.first,\n      .item.no-data .prefix {\n          width: 26px;\n      }\n\n      .header table thead tr th.first,\n      .item td.first .cell-data {\n          padding: 0;\n      }\n\n      .item td.first .datatable-checkbox {\n          display: none;\n      }\n\n      .content.has-multiple-selection .item.selected td.first .datatable-checkbox,\n      .content.has-multiple-selection .item td.first:hover .datatable-checkbox {\n          display: block;\n      }\n\n      .item.no-data .prefix {\n          float: left;\n      }\n\n      .item.group-header .cell-data:first-of-type .sme-icon:before {    \n          font-size: 10px;\n          line-height: 10px;\n          margin-top: -3px;\n          margin-right: 3px;\n      }\n\n      .item.group-item .first-data-column .cell-data {    \n          padding-left: 26px;\n      }\n\n      .header table thead tr th {\n          padding: 0 8px;\n      }\n\n      .header {\n          flex: 0 0 auto;\n          border-bottom: solid 1px #ddd;\n          background: white;\n          position: absolute;\n          margin-top: -1px;\n          z-index: 1;    \n      }\n\n      .header.is-scrolled {\n          box-shadow: 0px -1px 7px #999;\n      }\n\n      .content {\n          flex: 1 1 auto;\n          position: relative;\n          margin-top: 27px;\n      }\n\n      .content .scroll-data {\n          position: absolute;\n          left: 0;\n          width: 100%;\n          overflow: hidden;\n          border-collapse: collapse;\n      }\n\n      .content .scroll-container {\n          overflow-x: hidden;\n          overflow-y: auto;    \n      }\n\n      .content .scroll-body {\n          position: relative;\n          overflow: hidden;\n      }\n\n      .cell-data {\n          height: 30px;\n          line-height: 30px;\n          border-bottom: solid 1px #eee;  \n          overflow: hidden;    \n      }\n\n      .item.data {\n          cursor: pointer;\n      }\n\n      .item.data:hover {\n          background: #f2fbfe;\n      }\n\n      .item.data.selected {\n          background: #E6F7FE;\n      }\n\n      .item .cell-data {\n          white-space: nowrap;\n          text-overflow: ellipsis;\n          overflow: hidden;\n          padding: 0 8px;\n      }\n\n      :host >>> .scrollbar-measure {\n          width: 100px;\n          height: 100px;\n          overflow: scroll;\n          position: absolute;\n          top: -9999px;\n      }\n\n      .datatable-checkbox {\n          width: 100%;\n          position: relative;\n          height: 30px;\n      }\n      .datatable-checkbox label {\n          width: 12px;\n          height: 12px;\n          cursor: pointer;\n          position: absolute;\n          top: 50%;\n          left: 50%;\n          transform: translate(-50%, -50%);\n          background: white;\n          border: solid 1px #686868;    \n      }\n\n      .datatable-checkbox input[type=checkbox]:hover + label {\n          background: rgb(242,251,254);    \n      }\n\n      .datatable-checkbox input[type=checkbox] {\n          position: absolute;\n          top: 0;\n          left: 0;\n          width: 100%;\n          height: 100%;\n          z-index: 1;\n          margin: 0;\n          opacity: 0;\n          cursor: pointer;\n      }\n      .datatable-checkbox input[type=checkbox]:checked + label {\n          background: none;\n          border: solid 1px transparent;\n      }\n      .datatable-checkbox input[type=checkbox]:checked + label:after {\n          content: '\\E8FB';\n          font-family: Server-MDL2;\n          position: absolute;\n          top: 0;\n          line-height: 12px;\n      }\n      .loading-indicator {\n          display: none;\n          position: absolute;\n          left: 50%;\n          top: 50%;\n          transform: translate(-50%,-50%);\n      }\n      .is-busy .loading-indicator {\n          display: block;\n      }\n    "],"template":"\n      <div class=\"header\" #header [ngClass]=\"{'is-scrolled':isScrolledDown, 'has-multiple-selection':selectionMode==='multiple'}\">\n          <table #headerTable>\n              <thead>\n                  <tr>\n                      <th class=\"first\">\n                          <div class=\"datatable-checkbox\">\n                              <input type=\"checkbox\" [checked]=\"selection && selection.length===filteredItems.length\" (change)=\"onAllItemCheckBoxClicked()\"\n                              />\n                              <label></label>\n                          </div>\n                      </th>\n                      <th *ngFor=\"let column of columns\" (click)=\"clickColumn(column)\" [hidden]=\"column==groupColumn\">\n                          <span class=\"columnName\">{{column.header}}</span>\n                          <span class=\"sortIcon sme-icon\" [ngClass]=\"{'icon-win-up':column.sortMode==sortModeEnum.Ascend,'icon-win-down':column.sortMode==sortModeEnum.Descend}\"></span>\n                      </th>\n                  </tr>\n              </thead>\n          </table>\n      </div>\n      <div class=\"content\" #content [ngClass]=\"{'is-busy':isBusy, 'has-multiple-selection':selectionMode==='multiple'}\">\n          <div class=\"loading-indicator\">\n              <sme-loading-wheel></sme-loading-wheel>\n          </div>\n          <div class=\"scroll-container stretch-absolute\" #scrollContainer>\n              <div class=\"item no-data\" *ngIf=\"renderedItems.length===0 && !lazyLoad\">\n                  <div class=\"prefix cell-data\">&nbsp;</div>\n                  <div class=\"cell-data\">{{getPlaceholderMessage()}}</div>\n              </div>\n              <div class=\"scroll-body\" #scrollBody>\n                  <table class=\"scroll-data\" #scrollAboveData>\n                      <tbody>\n                          <tr *ngFor=\"let renderedItem of renderedItemsAboveViewPort; let rowIndex = index\" class=\"item data\" \n                              [ngClass]=\"{'selected': isItemSelected(renderedItem), 'group-item': renderedItem.type==renderedItemTypeEnum.GroupItem, 'group-header': renderedItem.type==renderedItemTypeEnum.GroupHeader}\">\n                              <td class=\"first\">\n                                  <div class=\"cell-data\">\n                                      <div class=\"datatable-checkbox\">\n                                          <input type=\"checkbox\" [checked]=\"isItemSelected(renderedItem)\" />\n                                          <label></label>\n                                      </div>\n                                  </div>\n                              </td>\n                              <td *ngFor=\"let column of columns; let colIndex=index\" [attr.colspan]=\"(renderedItem.type==renderedItemTypeEnum.GroupHeader && colIndex==0)?(columns.length-1):1\" [hidden]=\"(renderedItem.type==renderedItemTypeEnum.GroupHeader && colIndex>0) || column==groupColumn\"\n                                  [ngClass]=\"{'first-data-column': isFirstDataColumn(column)}\">\n                                  <div *ngIf=\"renderedItem.type==renderedItemTypeEnum.GroupHeader && colIndex==0\" class=\"cell-data\" (click)=\"clickGroupToggle(renderedItem)\">\n                                      <span *ngIf=\"useGroupToggle\" class=\"sme-icon\" [ngClass]=\"{'sme-icon-chevronDown':isGroupExpanded(renderedItem.data), 'sme-icon-chevronRight':!isGroupExpanded(renderedItem.data)}\"></span>\n                                      <span *ngIf=\"!this.groupHeaderTemplate\">\n                                          {{renderedItem.data}}\n                                      </span>\n                                      <span *ngIf=\"this.groupHeaderTemplate\">\n                                          <sme-data-table-template-loader [template]=\"this.groupHeaderTemplate\" [data]=\"renderedItem.data\"></sme-data-table-template-loader>\n                                      </span>\n                                  </div>\n                                  <div *ngIf=\"!column.bodyTemplate && renderedItem.type!=renderedItemTypeEnum.GroupHeader\" class=\"cell-data\">\n                                      {{renderedItem.data?renderedItem.data[column.field]:'.'}}\n                                  </div>\n                                  <div *ngIf=\"renderedItem.type!=renderedItemTypeEnum.GroupHeader && renderedItem.data && column.bodyTemplate\" class=\"cell-data\">\n                                      <sme-data-table-template-loader [template]=\"column.bodyTemplate\" [data]=\"renderedItem.data\" [rowIndex]=\"rowIndex\"></sme-data-table-template-loader>\n                                  </div>\n                              </td>\n                          </tr>\n                      </tbody>\n                  </table>\n                  <table class=\"scroll-data\" #scrollData>\n                      <tbody>\n                          <tr *ngFor=\"let renderedItem of renderedItemsInAndBelowViewPort; let rowIndex = index\" (click)=\"selectItem($event, renderedItem)\" class=\"item data\"\n                              [ngClass]=\"{'selected': isItemSelected(renderedItem), 'group-item': renderedItem.type==renderedItemTypeEnum.GroupItem, 'group-header': renderedItem.type==renderedItemTypeEnum.GroupHeader}\" (dblclick)=\"doubleClickRow(renderedItem)\">\n                              <td class=\"first\" [ngClass]=\"{'checked': isItemSelected(renderedItem)}\">\n                                  <div class=\"cell-data\">\n                                      <div class=\"datatable-checkbox\">\n                                          <input type=\"checkbox\" [checked]=\"isItemSelected(renderedItem)\" (change)=\"onItemCheckBoxClicked(renderedItem)\" />\n                                          <label></label>\n                                      </div>\n                                  </div>\n                              </td>\n                              <td *ngFor=\"let column of columns; let colIndex=index\" [attr.colspan]=\"(renderedItem.type==renderedItemTypeEnum.GroupHeader && colIndex==0)?(columns.length-1):1\" [hidden]=\"(renderedItem.type==renderedItemTypeEnum.GroupHeader && colIndex>0) || (renderedItem.type!=renderedItemTypeEnum.GroupHeader && column==groupColumn)\"\n                                  [ngClass]=\"{'first-data-column': isFirstDataColumn(column)}\">\n                                  <div *ngIf=\"renderedItem.type==renderedItemTypeEnum.GroupHeader && colIndex==0\" class=\"cell-data\" (click)=\"clickGroupToggle(renderedItem)\">\n                                      <span *ngIf=\"useGroupToggle\" class=\"sme-icon\" [ngClass]=\"{'sme-icon-chevronDown':isGroupExpanded(renderedItem.data), 'sme-icon-chevronRight':!isGroupExpanded(renderedItem.data)}\"></span>\n                                      <span *ngIf=\"!this.groupHeaderTemplate\">\n                                          {{renderedItem.data}}\n                                      </span>\n                                      <span *ngIf=\"this.groupHeaderTemplate\">\n                                          <sme-data-table-template-loader [template]=\"this.groupHeaderTemplate\" [data]=\"renderedItem.data\"></sme-data-table-template-loader>\n                                      </span>\n                                  </div>\n                                  <div *ngIf=\"!column.bodyTemplate && renderedItem.type!=renderedItemTypeEnum.GroupHeader\" class=\"cell-data\">\n                                      {{renderedItem.data?renderedItem.data[column.field]:'.'}}\n                                  </div>\n                                  <div *ngIf=\"renderedItem.type!=renderedItemTypeEnum.GroupHeader && renderedItem.data && column.bodyTemplate\" class=\"cell-data\">\n                                      <sme-data-table-template-loader [template]=\"column.bodyTemplate\" [data]=\"renderedItem.data\" [rowIndex]=\"rowIndex\"></sme-data-table-template-loader>\n                                  </div>\n                              </td>\n                          </tr>\n                          <tr class=\"item\" #tempRow>\n                              <td>\n                                  <div class=\"cell-data\">&nbsp;</div>\n                              </td>\n                          </tr>\n                      </tbody>\n                  </table>\n              </div>\n          </div>\n      </div>\n    "}]}],"members":{"headerTableElement":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["headerTable"]}]}],"contentElement":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["content"]}]}],"scrollContainerElement":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["scrollContainer"]}]}],"tempRowElement":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["tempRow"]}]}],"scrollBodyElement":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["scrollBody"]}]}],"scrollAboveDataElement":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["scrollAboveData"]}]}],"scrollDataElement":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["scrollData"]}]}],"groupHeaderTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild"},"arguments":["group"]}]}],"selectionChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"onRowDblclick":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"columns":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChildren"},"arguments":[{"__symbolic":"reference","module":"./data-table.column.component","name":"DataTableColumnComponent"}]}]}],"renderedItemsChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"isBusy":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"loadingMessage":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"noRecordMessage":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"lazyLoadingData":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"lazyLoad":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"globalFilter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"caseSensitiveFilter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"items":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"selection":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"selectionMode":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"defaultSortColumn":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"defaultSortMode":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"onFilter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"doCustomSort":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"onRowSelect":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"onRowUnselect":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"groupColumn":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"groupSortMode":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"useGroupToggle":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"defaultGroupToggleExpanded":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional"}},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject"},"arguments":["layout"]}]],"parameters":[{"__symbolic":"reference","module":"@angular/core","name":"NgZone"},{"__symbolic":"reference","module":"../common/interfaces","name":"Layout"}]}],"refreshData":[{"__symbolic":"method"}],"resetScroll":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"ngAfterViewChecked":[{"__symbolic":"method"}],"selectItem":[{"__symbolic":"method"}],"getPlaceholderMessage":[{"__symbolic":"method"}],"clickGroupToggle":[{"__symbolic":"method"}],"expandAllGroup":[{"__symbolic":"method"}],"collaseAllGroup":[{"__symbolic":"method"}],"isFirstDataColumn":[{"__symbolic":"method"}],"clickColumn":[{"__symbolic":"method"}],"doubleClickRow":[{"__symbolic":"method"}],"scrollSelectedItemIntoView":[{"__symbolic":"method"}],"onItemCheckBoxClicked":[{"__symbolic":"method"}],"onAllItemCheckBoxClicked":[{"__symbolic":"method"}],"isItemSelected":[{"__symbolic":"method"}],"isGroupExpanded":[{"__symbolic":"method"}],"virtualCount":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"initializeUI":[{"__symbolic":"method"}],"sortItems":[{"__symbolic":"method"}],"defaultSortCompareFunction":[{"__symbolic":"method"}],"hasVerticalOverflow":[{"__symbolic":"method"}],"alignScrollBar":[{"__symbolic":"method"}],"calculateScrollbarWidth":[{"__symbolic":"method"}],"calculateItemInViewPort":[{"__symbolic":"method"}],"filter":[{"__symbolic":"method"}],"handleGroup":[{"__symbolic":"method"}],"renderItems":[{"__symbolic":"method"}],"handleScrollAboveDataElement":[{"__symbolic":"method"}],"onLayoutChanged":[{"__symbolic":"method"}],"alignContent":[{"__symbolic":"method"}],"clearSelection":[{"__symbolic":"method"}]},"statics":{"selectionModeMultipleOption":"multiple"}}}}]