[{"__symbolic":"module","version":3,"metadata":{"MasterViewComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"sme-master-view","template":"\n\n      <h4 class=\"fixed-flex-size tool-header\" *ngIf=\"header\">{{header}}</h4>\n      <div class=\"fixed-flex-size flex-layout tool-bar\">\n          <div class=\"auto-flex-size action-bar-container\">\n              <ng-content select='sme-action-bar,.action-bar'></ng-content>\n          </div>\n\n          <div class=\"fixed-flex-size count-label-container\">\n              <span class=\"count-label\">{{total}} items</span>\n              <a class=\"count-label\" *ngIf=\"selectedItemCount > 0 && showSelection\" (click)=\"clearSelection.next()\">\n                  <span>{{selectedItemCount}} selected</span>\n                  <span class=\"sme-icon icon-win-clear align-middle\"></span>\n              </a>\n          </div>\n          <button *ngIf=\"showRefresh\" (click)=\"refresh.next()\">\n              <span class=\"sme-icon icon-win-refresh\"></span>\n          </button>\n          <button *ngIf=\"showFilter\" [class.active]=\"filterActive\" (click)=\"filter.next()\">\n              <span class=\"sme-icon icon-win-filter\"></span>\n          </button>\n          <div *ngIf=\"extraFilter\" class=\"extra-filter-container\">\n              <ng-content select='div.extra-filter'></ng-content>\n            </div>\n          <div *ngIf=\"searchable\" class=\"searchbox searchbox-action-bar\">\n              <ng-content select='input[type=search]'></ng-content>\n          </div>\n\n      </div>\n      <div #dataView class=\"auto-flex-size flex-layout relative no-scroll\" [class.show-header-shadow]='!isDataListScrolledTotop'>\n          <ng-content></ng-content>\n      </div>\n    ","styles":["\n      :host {\n          position: absolute;\n          top: 0;\n          left: 0;\n          bottom: 0;\n          right: 0;\n          display: flex;\n          flex: 1 1 auto;\n          flex-wrap: nowrap;\n          flex-direction: column;\n          align-content: stretch;\n          align-items: stretch;\n          justify-content: flex-start;\n          overflow: hidden;\n      }\n\n      .tool-header {\n          margin-left: 34px;\n          margin-bottom: 6px;\n      }\n\n      .tool-bar {\n          margin: 0 0 6px;\n      }\n\n      .tool-bar .action-bar-container {\n          min-width: 140px;\n      }\n\n      .count-label-container {\n          text-align: right;\n          height: 36px;\n          vertical-align: middle;\n          line-height: 36px;\n          font-size: 14px;\n          color: #333;\n      }\n\n      .count-label {\n          margin-right: 24px;\n          color: #686868;\n          font-style: italic;\n      }\n\n      a.count-label {\n          text-decoration: none;\n          color: #686868;\n      }\n\n      a.count-label:hover {\n          text-decoration: underline;\n          color: #686868;\n      }\n\n      .count-label .sme-icon:before {\n          margin-left:8px;\n          font-size: 15px;\n      }\n\n      button {\n          background: transparent;\n          border: none;\n          margin: 0 8px;\n          padding: 8px;\n          height: 36px;\n      }\n\n      button.active {\n          color: #0078D7;\n      }\n\n      button:focus {\n          outline: none\n      }\n\n      :host >>> .ui-treetable thead th.ui-state-default:first-of-type,\n      :host >>> .ui-treetable-row-selectable td:first-of-type,\n      :host >>> p-dataTable tr th:first-of-type,\n      :host >>> p-dataTable tr td:first-of-type\n      {\n          padding-left: 34px !important;\n      }\n\n      :host >>> .ui-treetable thead th.ui-state-default:last-of-type,\n      :host >>> .ui-treetable-row-selectable td:last-of-type,\n      :host >>> p-dataTable tr th:last-of-type,\n      :host >>> p-dataTable tr td:last-of-type\n      {\n          padding-right: 34px !important;\n      }\n\n      :host >>> p-dataTable .ui-datatable-scrollable-header\n      {\n          /*Using z-index to bring header above body of table*/\n          z-index: 1;\n          border-bottom: solid 1px #ddd;\n      }\n\n      :host >>> .show-header-shadow p-dataTable .ui-datatable-scrollable-header {\n          box-shadow: 0px 1px 0px rgba(12,13,14,0.1), 0px 3px 3px rgba(12,13,14,0.1);\n      }\n\n      :host >>> p-treeTable {\n          position: absolute;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n          overflow: auto;\n      }\n\n      .extra-filter-container {\n          margin-right: 12px;\n      }\n\n      :host >>> .extra-filter-container .extra-filter {\n          display: flex;\n      }\n\n      :host >>> .extra-filter-container .combobox {\n          width: unset;\n      }\n\n      :host >>> .extra-filter-container select {\n          color: #2D3239;\n          border-color: #B3B3B3;\n          font-size: 14px;\n      }\n\n      :host >>> .extra-filter-container .extra-filter-label {\n          color: #686868;\n          height: 36px;\n          line-height: 36px;\n          font-size: 14px;\n          margin-right: 6px;\n          margin-left: 12px;\n          max-width: 150px;\n      }\n    "]}]}],"members":{"searchElement":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild"},"arguments":["search"]}]}],"dataView":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["dataView"]}]}],"dataTable":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild"},"arguments":["dataTable"]}]}],"smeDataTable":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild"},"arguments":["smeDataTable"]}]}],"treeTable":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild"},"arguments":["treeTable"]}]}],"header":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"total":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"showSelection":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"showRefresh":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"showFilter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"filterActive":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"selection":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"requireDataItemUniqueId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"extraFilter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"refresh":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"filter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"clearSelection":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional"}}]],"parameters":[{"__symbolic":"reference","module":"@angular/core","name":"NgZone"},{"__symbolic":"reference","module":"../split-view","name":"SplitViewComponent"}]}],"ngAfterViewInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"updateLayout":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener"},"arguments":["window:resize"]}]}],"ngDoCheck":[{"__symbolic":"method"}],"handleDetailPaneExpanding":[{"__symbolic":"method"}],"ensureDataItemIsInViewport":[{"__symbolic":"method"}]}}}},{"__symbolic":"module","version":1,"metadata":{"MasterViewComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"sme-master-view","template":"\n\n      <h4 class=\"fixed-flex-size tool-header\" *ngIf=\"header\">{{header}}</h4>\n      <div class=\"fixed-flex-size flex-layout tool-bar\">\n          <div class=\"auto-flex-size action-bar-container\">\n              <ng-content select='sme-action-bar,.action-bar'></ng-content>\n          </div>\n\n          <div class=\"fixed-flex-size count-label-container\">\n              <span class=\"count-label\">{{total}} items</span>\n              <a class=\"count-label\" *ngIf=\"selectedItemCount > 0 && showSelection\" (click)=\"clearSelection.next()\">\n                  <span>{{selectedItemCount}} selected</span>\n                  <span class=\"sme-icon icon-win-clear align-middle\"></span>\n              </a>\n          </div>\n          <button *ngIf=\"showRefresh\" (click)=\"refresh.next()\">\n              <span class=\"sme-icon icon-win-refresh\"></span>\n          </button>\n          <button *ngIf=\"showFilter\" [class.active]=\"filterActive\" (click)=\"filter.next()\">\n              <span class=\"sme-icon icon-win-filter\"></span>\n          </button>\n          <div *ngIf=\"extraFilter\" class=\"extra-filter-container\">\n              <ng-content select='div.extra-filter'></ng-content>\n            </div>\n          <div *ngIf=\"searchable\" class=\"searchbox searchbox-action-bar\">\n              <ng-content select='input[type=search]'></ng-content>\n          </div>\n\n      </div>\n      <div #dataView class=\"auto-flex-size flex-layout relative no-scroll\" [class.show-header-shadow]='!isDataListScrolledTotop'>\n          <ng-content></ng-content>\n      </div>\n    ","styles":["\n      :host {\n          position: absolute;\n          top: 0;\n          left: 0;\n          bottom: 0;\n          right: 0;\n          display: flex;\n          flex: 1 1 auto;\n          flex-wrap: nowrap;\n          flex-direction: column;\n          align-content: stretch;\n          align-items: stretch;\n          justify-content: flex-start;\n          overflow: hidden;\n      }\n\n      .tool-header {\n          margin-left: 34px;\n          margin-bottom: 6px;\n      }\n\n      .tool-bar {\n          margin: 0 0 6px;\n      }\n\n      .tool-bar .action-bar-container {\n          min-width: 140px;\n      }\n\n      .count-label-container {\n          text-align: right;\n          height: 36px;\n          vertical-align: middle;\n          line-height: 36px;\n          font-size: 14px;\n          color: #333;\n      }\n\n      .count-label {\n          margin-right: 24px;\n          color: #686868;\n          font-style: italic;\n      }\n\n      a.count-label {\n          text-decoration: none;\n          color: #686868;\n      }\n\n      a.count-label:hover {\n          text-decoration: underline;\n          color: #686868;\n      }\n\n      .count-label .sme-icon:before {\n          margin-left:8px;\n          font-size: 15px;\n      }\n\n      button {\n          background: transparent;\n          border: none;\n          margin: 0 8px;\n          padding: 8px;\n          height: 36px;\n      }\n\n      button.active {\n          color: #0078D7;\n      }\n\n      button:focus {\n          outline: none\n      }\n\n      :host >>> .ui-treetable thead th.ui-state-default:first-of-type,\n      :host >>> .ui-treetable-row-selectable td:first-of-type,\n      :host >>> p-dataTable tr th:first-of-type,\n      :host >>> p-dataTable tr td:first-of-type\n      {\n          padding-left: 34px !important;\n      }\n\n      :host >>> .ui-treetable thead th.ui-state-default:last-of-type,\n      :host >>> .ui-treetable-row-selectable td:last-of-type,\n      :host >>> p-dataTable tr th:last-of-type,\n      :host >>> p-dataTable tr td:last-of-type\n      {\n          padding-right: 34px !important;\n      }\n\n      :host >>> p-dataTable .ui-datatable-scrollable-header\n      {\n          /*Using z-index to bring header above body of table*/\n          z-index: 1;\n          border-bottom: solid 1px #ddd;\n      }\n\n      :host >>> .show-header-shadow p-dataTable .ui-datatable-scrollable-header {\n          box-shadow: 0px 1px 0px rgba(12,13,14,0.1), 0px 3px 3px rgba(12,13,14,0.1);\n      }\n\n      :host >>> p-treeTable {\n          position: absolute;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n          overflow: auto;\n      }\n\n      .extra-filter-container {\n          margin-right: 12px;\n      }\n\n      :host >>> .extra-filter-container .extra-filter {\n          display: flex;\n      }\n\n      :host >>> .extra-filter-container .combobox {\n          width: unset;\n      }\n\n      :host >>> .extra-filter-container select {\n          color: #2D3239;\n          border-color: #B3B3B3;\n          font-size: 14px;\n      }\n\n      :host >>> .extra-filter-container .extra-filter-label {\n          color: #686868;\n          height: 36px;\n          line-height: 36px;\n          font-size: 14px;\n          margin-right: 6px;\n          margin-left: 12px;\n          max-width: 150px;\n      }\n    "]}]}],"members":{"searchElement":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild"},"arguments":["search"]}]}],"dataView":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["dataView"]}]}],"dataTable":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild"},"arguments":["dataTable"]}]}],"smeDataTable":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild"},"arguments":["smeDataTable"]}]}],"treeTable":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild"},"arguments":["treeTable"]}]}],"header":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"total":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"showSelection":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"showRefresh":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"showFilter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"filterActive":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"selection":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"requireDataItemUniqueId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"extraFilter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"refresh":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"filter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"clearSelection":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional"}}]],"parameters":[{"__symbolic":"reference","module":"@angular/core","name":"NgZone"},{"__symbolic":"reference","module":"../split-view","name":"SplitViewComponent"}]}],"ngAfterViewInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"updateLayout":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener"},"arguments":["window:resize"]}]}],"ngDoCheck":[{"__symbolic":"method"}],"handleDetailPaneExpanding":[{"__symbolic":"method"}],"ensureDataItemIsInViewport":[{"__symbolic":"method"}]}}}}]