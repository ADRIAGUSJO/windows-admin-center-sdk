[{"__symbolic":"module","version":3,"metadata":{"ActionBarComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"../action-container.component","name":"ActionContainerComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"sme-action-bar","template":"\n      <div class=\"visible-actions-container\" #actionBarElement>\n        <sme-dynamic-action-item *ngFor=\"let item of displayedActions | smeFilter:'hidden':true\" [item]=\"item\" (itemChanged)=\"onActionItemChanged()\"></sme-dynamic-action-item>\n      </div>\n      <sme-dropdown [class.show]=\"trayActions.length != 0\" [class.only]=\"this.displayedActions.length==0\">\n        <button #dropDown class=\"action-bar-ellipsis sme-dropdown-toggle\">\n          <span class=\"action-button-content\">{{ moreActionsDisplay }}</span>\n          <span class=\"sme-icon icon-win-chevronDown\"></span>\n        </button>\n        <sme-action-menu [actions]=\"trayActions\" class=\"sme-dropdown-content\" [(target)]=\"target\" [ngClass]=\"{'sme-dropdown-content-right': menuDisplayRight}\"></sme-action-menu>\n      </sme-dropdown>\n      <ng-content></ng-content>\n    ","styles":["\n      :host {\n        color: #0078d7;\n        overflow: visible; \n        white-space: nowrap;\n        font-size: 15px;\n        position: relative;\n        height: 40px;\n        width: 100%;\n        flex-wrap: nowrap;\n        min-width: 140px;\n      }\n\n      :host, .visible-actions-container {\n        display: flex;  \n        flex-direction: row;\n        align-content: stretch;\n        align-items: stretch;\n        justify-content: flex-start;\n      }\n\n      .visible-actions-container {\n        position: absolute;\n        padding: 1px;\n        flex: 1 1 auto;\n        flex-wrap: nowrap;\n      }\n\n      .action-bar-ellipsis {\n        border: 1px solid transparent;\n        outline: 1px solid transparent;\n        background: transparent;\n        color: #333333;\n        padding: 8px 8px 6px 8px;\n        line-height: 20px;\n        overflow:hidden;\n      }\n\n      sme-dropdown >>> .sme-dropdown-content-container {\n        /* This is used for making sure the dropdown content is above the backdrop layer whose z-index is 990 */\n        z-index: 991;\n        background-color: #f2f2f2;\n        color: #333333;\n        left: 0px;\n        overflow-x: hidden;\n        overflow-y: auto;\n        flex-direction: column;\n        width: 208px;\n      }\n\n      sme-dropdown >>> .sme-dropdown-content-container.sme-dropdown-content-right {\n        left: 0px;\n      }\n\n      sme-dropdown {\n        padding-right: 30px;\n        position:absolute;\n        top:0;\n        right:9999px; \n        background: white;\n        /* Even the dropdown is suppored to be hidden, we still want it to be on screen then we can get its rendering size. */\n        /* So we set the right to be super right then the dropdown looks like hidden on the screen.*/\n      }\n\n      sme-dropdown.show{\n        right:0;\n      }\n\n      sme-dropdown.show.only{\n        right:auto;\n        left:17px;\n      }\n      sme-dropdown.only >>> .sme-dropdown-content-container{\n        padding-left:0;  \n      }\n\n      :host.narrow sme-dropdown {\n        padding-right: 17px;\n      }\n\n      .action-button-content {\n        margin-right: 10px;\n        display: block;\n        float: left;\n      }\n\n      :host >>> .action-bar-ellipsis+.sme-icon {\n        display: block;\n        width: 20px;\n        margin-right: 35px;\n        margin-top: 1px;\n      }\n    "]}]}],"members":{"element":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["actionBarElement"]}]}],"dropDownElement":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["dropDown"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"IterableDiffers"}]}],"ngAfterViewInit":[{"__symbolic":"method"}],"onWindowResize":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener"},"arguments":["window:resize",["$event"]]}]}],"onActionItemChanged":[{"__symbolic":"method"}],"updateActionBar":[{"__symbolic":"method"}]}}}},{"__symbolic":"module","version":1,"metadata":{"ActionBarComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"../action-container.component","name":"ActionContainerComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"sme-action-bar","template":"\n      <div class=\"visible-actions-container\" #actionBarElement>\n        <sme-dynamic-action-item *ngFor=\"let item of displayedActions | smeFilter:'hidden':true\" [item]=\"item\" (itemChanged)=\"onActionItemChanged()\"></sme-dynamic-action-item>\n      </div>\n      <sme-dropdown [class.show]=\"trayActions.length != 0\" [class.only]=\"this.displayedActions.length==0\">\n        <button #dropDown class=\"action-bar-ellipsis sme-dropdown-toggle\">\n          <span class=\"action-button-content\">{{ moreActionsDisplay }}</span>\n          <span class=\"sme-icon icon-win-chevronDown\"></span>\n        </button>\n        <sme-action-menu [actions]=\"trayActions\" class=\"sme-dropdown-content\" [(target)]=\"target\" [ngClass]=\"{'sme-dropdown-content-right': menuDisplayRight}\"></sme-action-menu>\n      </sme-dropdown>\n      <ng-content></ng-content>\n    ","styles":["\n      :host {\n        color: #0078d7;\n        overflow: visible; \n        white-space: nowrap;\n        font-size: 15px;\n        position: relative;\n        height: 40px;\n        width: 100%;\n        flex-wrap: nowrap;\n        min-width: 140px;\n      }\n\n      :host, .visible-actions-container {\n        display: flex;  \n        flex-direction: row;\n        align-content: stretch;\n        align-items: stretch;\n        justify-content: flex-start;\n      }\n\n      .visible-actions-container {\n        position: absolute;\n        padding: 1px;\n        flex: 1 1 auto;\n        flex-wrap: nowrap;\n      }\n\n      .action-bar-ellipsis {\n        border: 1px solid transparent;\n        outline: 1px solid transparent;\n        background: transparent;\n        color: #333333;\n        padding: 8px 8px 6px 8px;\n        line-height: 20px;\n        overflow:hidden;\n      }\n\n      sme-dropdown >>> .sme-dropdown-content-container {\n        /* This is used for making sure the dropdown content is above the backdrop layer whose z-index is 990 */\n        z-index: 991;\n        background-color: #f2f2f2;\n        color: #333333;\n        left: 0px;\n        overflow-x: hidden;\n        overflow-y: auto;\n        flex-direction: column;\n        width: 208px;\n      }\n\n      sme-dropdown >>> .sme-dropdown-content-container.sme-dropdown-content-right {\n        left: 0px;\n      }\n\n      sme-dropdown {\n        padding-right: 30px;\n        position:absolute;\n        top:0;\n        right:9999px; \n        background: white;\n        /* Even the dropdown is suppored to be hidden, we still want it to be on screen then we can get its rendering size. */\n        /* So we set the right to be super right then the dropdown looks like hidden on the screen.*/\n      }\n\n      sme-dropdown.show{\n        right:0;\n      }\n\n      sme-dropdown.show.only{\n        right:auto;\n        left:17px;\n      }\n      sme-dropdown.only >>> .sme-dropdown-content-container{\n        padding-left:0;  \n      }\n\n      :host.narrow sme-dropdown {\n        padding-right: 17px;\n      }\n\n      .action-button-content {\n        margin-right: 10px;\n        display: block;\n        float: left;\n      }\n\n      :host >>> .action-bar-ellipsis+.sme-icon {\n        display: block;\n        width: 20px;\n        margin-right: 35px;\n        margin-top: 1px;\n      }\n    "]}]}],"members":{"element":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["actionBarElement"]}]}],"dropDownElement":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["dropDown"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"IterableDiffers"}]}],"ngAfterViewInit":[{"__symbolic":"method"}],"onWindowResize":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener"},"arguments":["window:resize",["$event"]]}]}],"onActionItemChanged":[{"__symbolic":"method"}],"updateActionBar":[{"__symbolic":"method"}]}}}}]