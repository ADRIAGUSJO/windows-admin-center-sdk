[{"__symbolic":"module","version":3,"metadata":{"TagsInputComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"../form-input-base.component","name":"SmeInternalFormInputBaseComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"sme-input[type=\"tags\"]","template":"\n      <div class=\"sme-tag\" *ngFor=\"let tag of value; let i = index\">\n          <span class=\"sme-tag-content\">{{tag}}</span>\n          <button class=\"sme-button-trigger sme-button-auto-width sme-tag-button sme-tag-button-delete\" role=\"button\" (click)=\"removeTag($event, i)\" [attr.aria-label]=\"strings.MsftSmeShell.Angular.TagsInput.RemoveTag.labelFormat | smeFormat:tag\" [title]=\"strings.MsftSmeShell.Angular.TagsInput.RemoveTag.labelFormat | smeFormat:tag\">\n              <span class=\"sme-icon sme-icon-clear sme-icon-size-xxs\"></span>\n          </button>\n      </div>\n      <div class=\"sme-tag\">\n          <!-- This input does not need to be in a form as this entire component is meant to be used as an element within a form. -->\n          <input #newTagInput class=\"sme-tag-input\" type=\"text\" [attr.list]=\"idBag.newTagSuggestionsList\" autocomplete=\"off\" [title]=\"strings.MsftSmeShell.Angular.TagsInput.Instructions.label\" [(ngModel)]=\"newTags\" (keydown.enter)=\"submitTags($event)\" (blur)=\"submitTags($event)\"\n          />\n          <datalist [id]=\"idBag.newTagSuggestionsList\">\n              <option *ngFor=\"let suggestion of displayedSuggestions\" >{{suggestion}}</option>\n          </datalist>\n          <button class=\"sme-button-trigger sme-tag-button sme-button-auto-width sme-tag-button-add\" role=\"button\" [attr.aria-label]=\"strings.MsftSmeShell.Angular.TagsInput.AddTag.label\" [title]=\"(!value || value.length === 0) ? '' : strings.MsftSmeShell.Angular.TagsInput.AddTag.label\"\n              (click)=\"newTagInput.focus()\">\n              <span class=\"sme-icon sme-icon-add sme-icon-size-xxs\"></span>\n              <span *ngIf=\"!value || value.length === 0\">{{strings.MsftSmeShell.Angular.TagsInput.AddTag.label}}</span>\n          </button>\n      </div>\n    ","providers":[{"provide":{"__symbolic":"reference","module":"@angular/forms","name":"NG_VALUE_ACCESSOR"},"useExisting":{"__symbolic":"reference","name":"TagsInputComponent"},"multi":true},{"provide":{"__symbolic":"reference","module":"@angular/forms","name":"NG_VALIDATORS"},"useExisting":{"__symbolic":"reference","name":"TagsInputComponent"},"multi":true}]}]}],"members":{"tagSplitCharacter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"suggestions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"Renderer2"},{"__symbolic":"reference","module":"@angular/core","name":"ElementRef"},{"__symbolic":"reference","module":"../../../../service","name":"AppContextService"}]}],"removeTag":[{"__symbolic":"method"}],"submitTags":[{"__symbolic":"method"}],"getInitialHostClasses":[{"__symbolic":"method"}],"updateDisplayedSuggestions":[{"__symbolic":"method"}],"onValueChanged":[{"__symbolic":"method"}],"createIdBag":[{"__symbolic":"method"}]}}}},{"__symbolic":"module","version":1,"metadata":{"TagsInputComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"../form-input-base.component","name":"SmeInternalFormInputBaseComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"sme-input[type=\"tags\"]","template":"\n      <div class=\"sme-tag\" *ngFor=\"let tag of value; let i = index\">\n          <span class=\"sme-tag-content\">{{tag}}</span>\n          <button class=\"sme-button-trigger sme-button-auto-width sme-tag-button sme-tag-button-delete\" role=\"button\" (click)=\"removeTag($event, i)\" [attr.aria-label]=\"strings.MsftSmeShell.Angular.TagsInput.RemoveTag.labelFormat | smeFormat:tag\" [title]=\"strings.MsftSmeShell.Angular.TagsInput.RemoveTag.labelFormat | smeFormat:tag\">\n              <span class=\"sme-icon sme-icon-clear sme-icon-size-xxs\"></span>\n          </button>\n      </div>\n      <div class=\"sme-tag\">\n          <!-- This input does not need to be in a form as this entire component is meant to be used as an element within a form. -->\n          <input #newTagInput class=\"sme-tag-input\" type=\"text\" [attr.list]=\"idBag.newTagSuggestionsList\" autocomplete=\"off\" [title]=\"strings.MsftSmeShell.Angular.TagsInput.Instructions.label\" [(ngModel)]=\"newTags\" (keydown.enter)=\"submitTags($event)\" (blur)=\"submitTags($event)\"\n          />\n          <datalist [id]=\"idBag.newTagSuggestionsList\">\n              <option *ngFor=\"let suggestion of displayedSuggestions\" >{{suggestion}}</option>\n          </datalist>\n          <button class=\"sme-button-trigger sme-tag-button sme-button-auto-width sme-tag-button-add\" role=\"button\" [attr.aria-label]=\"strings.MsftSmeShell.Angular.TagsInput.AddTag.label\" [title]=\"(!value || value.length === 0) ? '' : strings.MsftSmeShell.Angular.TagsInput.AddTag.label\"\n              (click)=\"newTagInput.focus()\">\n              <span class=\"sme-icon sme-icon-add sme-icon-size-xxs\"></span>\n              <span *ngIf=\"!value || value.length === 0\">{{strings.MsftSmeShell.Angular.TagsInput.AddTag.label}}</span>\n          </button>\n      </div>\n    ","providers":[{"provide":{"__symbolic":"reference","module":"@angular/forms","name":"NG_VALUE_ACCESSOR"},"useExisting":{"__symbolic":"reference","name":"TagsInputComponent"},"multi":true},{"provide":{"__symbolic":"reference","module":"@angular/forms","name":"NG_VALIDATORS"},"useExisting":{"__symbolic":"reference","name":"TagsInputComponent"},"multi":true}]}]}],"members":{"tagSplitCharacter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"suggestions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"Renderer2"},{"__symbolic":"reference","module":"@angular/core","name":"ElementRef"},{"__symbolic":"reference","module":"../../../../service","name":"AppContextService"}]}],"removeTag":[{"__symbolic":"method"}],"submitTags":[{"__symbolic":"method"}],"getInitialHostClasses":[{"__symbolic":"method"}],"updateDisplayedSuggestions":[{"__symbolic":"method"}],"onValueChanged":[{"__symbolic":"method"}],"createIdBag":[{"__symbolic":"method"}]}}}}]